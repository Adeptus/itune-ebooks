{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mariuszkoziel/Workspace/itune-ebooks/src/counter/Counter.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Stack, Tag } from '@chakra-ui/react';\nimport * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { decCount, incCount, selectCount } from './counterSlice'; // LEGACY\n// export class Counter extends React.Component {\n//   state = {\n//     count: 0,\n//   };\n//   componentDidMount() {\n//     console.log('did mount');\n//   }\n//   render() {\n//     return (\n//       <Stack direction=\"row\">\n//         <Tag>{this.state.count}</Tag>\n//         <Button\n//           colorScheme=\"red\"\n//           onClick={() =>\n//             this.setState({\n//               count: this.state.count - 1,\n//             })\n//           }\n//         >\n//           -1\n//         </Button>\n//         <Button\n//           colorScheme=\"green\"\n//           onClick={() =>\n//             this.setState({\n//               count: this.state.count + 1,\n//             })\n//           }\n//         >\n//           +1\n//         </Button>\n//       </Stack>\n//     );\n//   }\n// }\n// HOOKS\n// export function Counter() {\n//   const [count, setCount] = React.useState(0);\n//   return (\n//     <Stack direction=\"row\">\n//       <Tag>{count}</Tag>\n//       <Button colorScheme=\"red\" onClick={() => setCount(count - 1)}>\n//         -1\n//       </Button>\n//       <Button colorScheme=\"green\" onClick={() => setCount(count + 1)}>\n//         +1\n//       </Button>\n//     </Stack>\n//   );\n// }\n\nexport function Counter() {\n  _s();\n\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(Tag, {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"red\",\n      onClick: () => dispatch(decCount(1)),\n      children: \"-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"green\",\n      onClick: () => dispatch(incCount(1)),\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Counter, \"Hx8ZS0E5Jr/6DPTYqq8Q1lSknko=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/mariuszkoziel/Workspace/itune-ebooks/src/counter/Counter.tsx"],"names":["Button","Stack","Tag","React","useDispatch","useSelector","decCount","incCount","selectCount","Counter","count","dispatch"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,GAAxB,QAAmC,kBAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,WAA7B,QAAgD,gBAAhD,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,QAAMC,KAAK,GAAGL,WAAW,CAACG,WAAD,CAAzB;AACA,QAAMG,QAAQ,GAAGP,WAAW,EAA5B;AAEA,sBACE,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,KAAjB;AAAA,4BACE,QAAC,GAAD;AAAA,gBAAMM;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,KAApB;AAA0B,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACL,QAAQ,CAAC,CAAD,CAAT,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,OAApB;AAA4B,MAAA,OAAO,EAAE,MAAMK,QAAQ,CAACJ,QAAQ,CAAC,CAAD,CAAT,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAfeE,O;UACAJ,W,EACGD,W;;;KAFHK,O","sourcesContent":["import { Button, Stack, Tag } from '@chakra-ui/react';\nimport * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { decCount, incCount, selectCount } from './counterSlice';\n\n// LEGACY\n// export class Counter extends React.Component {\n//   state = {\n//     count: 0,\n//   };\n//   componentDidMount() {\n//     console.log('did mount');\n//   }\n//   render() {\n//     return (\n//       <Stack direction=\"row\">\n//         <Tag>{this.state.count}</Tag>\n//         <Button\n//           colorScheme=\"red\"\n//           onClick={() =>\n//             this.setState({\n//               count: this.state.count - 1,\n//             })\n//           }\n//         >\n//           -1\n//         </Button>\n//         <Button\n//           colorScheme=\"green\"\n//           onClick={() =>\n//             this.setState({\n//               count: this.state.count + 1,\n//             })\n//           }\n//         >\n//           +1\n//         </Button>\n//       </Stack>\n//     );\n//   }\n// }\n\n// HOOKS\n// export function Counter() {\n//   const [count, setCount] = React.useState(0);\n//   return (\n//     <Stack direction=\"row\">\n//       <Tag>{count}</Tag>\n//       <Button colorScheme=\"red\" onClick={() => setCount(count - 1)}>\n//         -1\n//       </Button>\n//       <Button colorScheme=\"green\" onClick={() => setCount(count + 1)}>\n//         +1\n//       </Button>\n//     </Stack>\n//   );\n// }\n\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n\n  return (\n    <Stack direction=\"row\">\n      <Tag>{count}</Tag>\n      <Button colorScheme=\"red\" onClick={() => dispatch(decCount(1))}>\n        -1\n      </Button>\n      <Button colorScheme=\"green\" onClick={() => dispatch(incCount(1))}>\n        +1\n      </Button>\n    </Stack>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}