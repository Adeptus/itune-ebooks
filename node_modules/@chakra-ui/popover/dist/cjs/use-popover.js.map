{"version":3,"sources":["../../src/use-popover.ts"],"names":["TRIGGER","click","hover","usePopover","props","closeOnBlur","closeOnEsc","initialFocusRef","placementProp","placement","gutter","id","arrowSize","returnFocusOnClose","autoFocus","arrowShadowColor","modifiers","trigger","openDelay","closeDelay","isLazy","isOpen","onClose","onOpen","onToggle","triggerRef","popoverRef","isHoveringRef","hasHeader","setHasHeader","hasBody","setHasBody","triggerId","popoverId","headerId","bodyId","fallbackShadowColor","shadowColor","arrowColor","popper","enabled","focusRef","visible","shouldFocus","ref","handler","event","current","contains","target","getPopoverProps","_ref","popoverProps","style","transformOrigin","children","tabIndex","role","onKeyDown","key","onBlur","element","relatedTarget","document","activeElement","undefined","onMouseEnter","onMouseLeave","setTimeout","getPopoverPositionerProps","getPopperProps","visibility","openTimeout","closeTimeout","getTriggerProps","triggerProps","onClick","onFocus","window","clearTimeout","getReferenceProps","getArrowProps","getArrowWrapperProps","onTransitionEnd","dispatchEvent","Event","forceUpdate","getArrowPositionerProps"],"mappings":";;;;;AAAA;;AAQA;;AACA;;AACA;;AAQA;;;;AAEA,IAAMA,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE,OADO;AAEdC,EAAAA,KAAK,EAAE;AAFO,CAAhB;;AA8FO,SAASC,UAAT,CAAoBC,KAApB,EAAiD;AAAA,MAA7BA,KAA6B;AAA7BA,IAAAA,KAA6B,GAAJ,EAAI;AAAA;;AAAA,eAiBlDA,KAjBkD;AAAA,kCAEpDC,WAFoD;AAAA,MAEpDA,WAFoD,mCAEtC,IAFsC;AAAA,iCAGpDC,UAHoD;AAAA,MAGpDA,UAHoD,kCAGvC,IAHuC;AAAA,MAIpDC,eAJoD,UAIpDA,eAJoD;AAAA,MAKzCC,aALyC,UAKpDC,SALoD;AAAA,MAMpDC,MANoD,UAMpDA,MANoD;AAAA,MAOpDC,EAPoD,UAOpDA,EAPoD;AAAA,MAQpDC,SARoD,UAQpDA,SARoD;AAAA,qCASpDC,kBAToD;AAAA,MASpDA,kBAToD,sCAS/B,IAT+B;AAAA,gCAUpDC,SAVoD;AAAA,MAUpDA,SAVoD,iCAUxC,IAVwC;AAAA,MAWpDC,gBAXoD,UAWpDA,gBAXoD;AAAA,MAYpDC,SAZoD,UAYpDA,SAZoD;AAAA,8BAapDC,OAboD;AAAA,MAapDA,OAboD,+BAa1CjB,OAAO,CAACC,KAbkC;AAAA,gCAcpDiB,SAdoD;AAAA,MAcpDA,SAdoD,iCAcxC,GAdwC;AAAA,iCAepDC,UAfoD;AAAA,MAepDA,UAfoD,kCAevC,GAfuC;AAAA,MAgBpDC,MAhBoD,UAgBpDA,MAhBoD;;AAAA,uBAmBR,0BAAchB,KAAd,CAnBQ;AAAA,MAmB9CiB,MAnB8C,kBAmB9CA,MAnB8C;AAAA,MAmBtCC,OAnBsC,kBAmBtCA,OAnBsC;AAAA,MAmB7BC,MAnB6B,kBAmB7BA,MAnB6B;AAAA,MAmBrBC,QAnBqB,kBAmBrBA,QAnBqB;;AAqBtD,MAAMC,UAAU,GAAG,mBAAoB,IAApB,CAAnB;AACA,MAAMC,UAAU,GAAG,mBAAoB,IAApB,CAAnB;AAEA,MAAMC,aAAa,GAAG,mBAAO,KAAP,CAAtB;;AAxBsD,oBA0BpB,wBA1BoB;AAAA,MA0B/CC,SA1B+C;AAAA,MA0BpCC,YA1BoC;;AAAA,qBA2BxB,wBA3BwB;AAAA,MA2B/CC,OA3B+C;AAAA,MA2BtCC,UA3BsC;;AAAA,gBA6BL,mBAC/CpB,EAD+C,EAE/C,iBAF+C,EAG/C,iBAH+C,EAI/C,gBAJ+C,EAK/C,cAL+C,CA7BK;AAAA,MA6B/CqB,SA7B+C;AAAA,MA6BpCC,SA7BoC;AAAA,MA6BzBC,QA7ByB;AAAA,MA6BfC,MA7Be;;AAqCtD,MAAMC,mBAAmB,GAAG,+BAAkB,UAAlB,EAA8B,gBAA9B,CAA5B;AACA,MAAMC,WAAW,GAAGtB,gBAAH,WAAGA,gBAAH,GAAuBqB,mBAAxC;AACA,MAAME,UAAU,GAAG,sBAAS,QAAT,EAAmBD,WAAnB,EAAgCtB,gBAAhC,CAAnB;AAEA,MAAMwB,MAAM,GAAG,uBAAU;AACvBC,IAAAA,OAAO,EAAEnB,MADc;AAEvBZ,IAAAA,SAAS,EAAED,aAFY;AAGvBE,IAAAA,MAAM,EAANA,MAHuB;AAIvBE,IAAAA,SAAS,EAATA,SAJuB;AAKvBG,IAAAA,gBAAgB,EAAEuB,UALK;AAMvBtB,IAAAA,SAAS,EAATA;AANuB,GAAV,CAAf;AASA,6BAAeU,UAAf,EAA2B;AACzBe,IAAAA,QAAQ,EAAEhB,UADe;AAEzBiB,IAAAA,OAAO,EAAErB,MAFgB;AAGzBsB,IAAAA,WAAW,EAAE9B,kBAAkB,IAAII,OAAO,KAAKjB,OAAO,CAACC;AAH9B,GAA3B;AAMA,6BAAeyB,UAAf,EAA2B;AACzBgB,IAAAA,OAAO,EAAErB,MADgB;AAEzBoB,IAAAA,QAAQ,EAAElC,eAFe;AAGzBoC,IAAAA,WAAW,EAAE7B,SAAS,IAAIG,OAAO,KAAKjB,OAAO,CAACC;AAHrB,GAA3B;AAMA,8BAAgB;AACd2C,IAAAA,GAAG,EAAElB,UADS;AAEdmB,IAAAA,OAAO,EAAE,iBAACC,KAAD,EAAW;AAAA;;AAClB,UACEzB,MAAM,IACNJ,OAAO,KAAKjB,OAAO,CAACC,KADpB,IAEAI,WAFA,IAGA,yBAACoB,UAAU,CAACsB,OAAZ,aAAC,oBAAoBC,QAApB,CAA6BF,KAAK,CAACG,MAAnC,CAAD,CAJF,EAKE;AACA3B,QAAAA,OAAO;AACR;AACF;AAXa,GAAhB;AAcA,MAAM4B,eAA2B,GAAG,wBAClC,UAAC9C,KAAD,EAAa+C,IAAb,EAA6B;AAAA,QAA5B/C,KAA4B;AAA5BA,MAAAA,KAA4B,GAApB,EAAoB;AAAA;;AAAA,QAAhB+C,IAAgB;AAAhBA,MAAAA,IAAgB,GAAT,IAAS;AAAA;;AAC3B,QAAMC,YAAuB,gBACxBhD,KADwB;AAE3BiD,MAAAA,KAAK,eAAOjD,KAAK,CAACiD,KAAb;AAAoBC,QAAAA,eAAe,EAAEf,MAAM,CAACe;AAA5C,QAFsB;AAG3BV,MAAAA,GAAG,EAAE,sBAAUlB,UAAV,EAAsByB,IAAtB,CAHsB;AAI3BI,MAAAA,QAAQ,EAAE,CAACnC,MAAD,IAAWC,MAAX,GAAoBjB,KAAK,CAACmD,QAA1B,GAAqC,IAJpB;AAK3B5C,MAAAA,EAAE,EAAEsB,SALuB;AAM3BuB,MAAAA,QAAQ,EAAE,CAAC,CANgB;AAO3BC,MAAAA,IAAI,EAAE,QAPqB;AAQ3BC,MAAAA,SAAS,EAAE,4BAAgBtD,KAAK,CAACsD,SAAtB,EAAiC,UAACZ,KAAD,EAAW;AACrD,YAAIxC,UAAU,IAAIwC,KAAK,CAACa,GAAN,KAAc,QAAhC,EAA0C;AACxCrC,UAAAA,OAAO;AACR;AACF,OAJU,CARgB;AAa3BsC,MAAAA,MAAM,EAAE,4BAAgBxD,KAAK,CAACwD,MAAtB,EAA8B,UAACd,KAAD,EAAW;AAAA;;AAC/C,YAAMe,OAAO,2BAAIf,KAAK,CAACgB,aAAV,mCACXC,QAAQ,CAACC,aADX;;AAGA,YACE3C,MAAM,IACNhB,WADA,IAEA,yBAACqB,UAAU,CAACqB,OAAZ,aAAC,oBAAoBC,QAApB,CAA6Ba,OAA7B,CAAD,CAFA,IAGA,0BAACpC,UAAU,CAACsB,OAAZ,aAAC,qBAAoBC,QAApB,CAA6Ba,OAA7B,CAAD,CAJF,EAKE;AACAvC,UAAAA,OAAO;AACR;AACF,OAZO,CAbmB;AA0B3B,yBAAmBM,SAAS,GAAGM,QAAH,GAAc+B,SA1Bf;AA2B3B,0BAAoBnC,OAAO,GAAGK,MAAH,GAAY8B;AA3BZ,MAA7B;;AA8BA,QAAIhD,OAAO,KAAKjB,OAAO,CAACE,KAAxB,EAA+B;AAC7BkD,MAAAA,YAAY,CAACK,IAAb,GAAoB,SAApB;AACAL,MAAAA,YAAY,CAACc,YAAb,GAA4B,4BAAgB9D,KAAK,CAAC8D,YAAtB,EAAoC,YAAM;AACpEvC,QAAAA,aAAa,CAACoB,OAAd,GAAwB,IAAxB;AACD,OAF2B,CAA5B;AAGAK,MAAAA,YAAY,CAACe,YAAb,GAA4B,4BAAgB/D,KAAK,CAAC+D,YAAtB,EAAoC,YAAM;AACpExC,QAAAA,aAAa,CAACoB,OAAd,GAAwB,KAAxB;AACAqB,QAAAA,UAAU,CAAC9C,OAAD,EAAUH,UAAV,CAAV;AACD,OAH2B,CAA5B;AAID;;AAED,WAAOiC,YAAP;AACD,GA5CiC,EA6ClC,CACEhC,MADF,EAEEC,MAFF,EAGEY,SAHF,EAIEL,SAJF,EAKEM,QALF,EAMEJ,OANF,EAOEK,MAPF,EAQElB,OARF,EASEsB,MATF,EAUEjC,UAVF,EAWEgB,OAXF,EAYEH,UAZF,EAaEd,WAbF,CA7CkC,CAApC;;AA8DA,MAAMgE,yBAAqC,GAAG,SAAxCA,yBAAwC,CAACjE,KAAD,EAAa+C,IAAb;AAAA,QAAC/C,KAAD;AAACA,MAAAA,KAAD,GAAS,EAAT;AAAA;;AAAA,QAAa+C,IAAb;AAAaA,MAAAA,IAAb,GAAoB,IAApB;AAAA;;AAAA,WAC5CmB,cAAc,CACZ,sBAAUlE,KAAV,EAAiB;AACfiD,MAAAA,KAAK,EAAE;AAAEkB,QAAAA,UAAU,EAAElD,MAAM,GAAG,SAAH,GAAe;AAAnC;AADQ,KAAjB,CADY,EAIZ8B,IAJY,CAD8B;AAAA,GAA9C;;AAQA,MAAMqB,WAAW,GAAG,oBAApB;AACA,MAAMC,YAAY,GAAG,oBAArB;AAEA,MAAMC,eAA2B,GAAG,wBAClC,UAACtE,KAAD,EAAa+C,IAAb,EAA6B;AAAA,QAA5B/C,KAA4B;AAA5BA,MAAAA,KAA4B,GAApB,EAAoB;AAAA;;AAAA,QAAhB+C,IAAgB;AAAhBA,MAAAA,IAAgB,GAAT,IAAS;AAAA;;AAC3B,QAAMwB,YAAuB,gBACxBvE,KADwB;AAE3BO,MAAAA,EAAE,EAAEqB,SAFuB;AAG3B,uBAAiB,QAHU;AAI3B,uBAAiBX,MAJU;AAK3B,uBAAiBY;AALU,MAA7B;;AAQA,QAAIhB,OAAO,KAAKjB,OAAO,CAACC,KAAxB,EAA+B;AAC7B0E,MAAAA,YAAY,CAACC,OAAb,GAAuB,4BAAgBxE,KAAK,CAACwE,OAAtB,EAA+BpD,QAA/B,CAAvB;AACD;;AAED,QAAIP,OAAO,KAAKjB,OAAO,CAACE,KAAxB,EAA+B;AAC7B;AACR;AACA;AACA;AACA;AACA;AACQyE,MAAAA,YAAY,CAACE,OAAb,GAAuB,4BAAgBzE,KAAK,CAACyE,OAAtB,EAA+BtD,MAA/B,CAAvB;AACAoD,MAAAA,YAAY,CAACf,MAAb,GAAsB,4BAAgBxD,KAAK,CAACwD,MAAtB,EAA8BtC,OAA9B,CAAtB;AAEA;AACR;AACA;AACA;;AACQqD,MAAAA,YAAY,CAACjB,SAAb,GAAyB,4BAAgBtD,KAAK,CAACsD,SAAtB,EAAiC,UAACZ,KAAD,EAAW;AACnE,YAAIA,KAAK,CAACa,GAAN,KAAc,QAAlB,EAA4B;AAC1BrC,UAAAA,OAAO;AACR;AACF,OAJwB,CAAzB;AAMAqD,MAAAA,YAAY,CAACT,YAAb,GAA4B,4BAAgB9D,KAAK,CAAC8D,YAAtB,EAAoC,YAAM;AACpEvC,QAAAA,aAAa,CAACoB,OAAd,GAAwB,IAAxB;AACAyB,QAAAA,WAAW,CAACzB,OAAZ,GAAsB+B,MAAM,CAACV,UAAP,CAAkB7C,MAAlB,EAA0BL,SAA1B,CAAtB;AACD,OAH2B,CAA5B;AAKAyD,MAAAA,YAAY,CAACR,YAAb,GAA4B,4BAAgB/D,KAAK,CAAC+D,YAAtB,EAAoC,YAAM;AACpExC,QAAAA,aAAa,CAACoB,OAAd,GAAwB,KAAxB;;AAEA,YAAIyB,WAAW,CAACzB,OAAhB,EAAyB;AACvBgC,UAAAA,YAAY,CAACP,WAAW,CAACzB,OAAb,CAAZ;AACAyB,UAAAA,WAAW,CAACzB,OAAZ,GAAsBkB,SAAtB;AACD;;AAEDQ,QAAAA,YAAY,CAAC1B,OAAb,GAAuB+B,MAAM,CAACV,UAAP,CAAkB,YAAM;AAC7C,cAAIzC,aAAa,CAACoB,OAAd,KAA0B,KAA9B,EAAqC;AACnCzB,YAAAA,OAAO;AACR;AACF,SAJsB,EAIpBH,UAJoB,CAAvB;AAKD,OAb2B,CAA5B;AAcD;;AAED,WAAOoB,MAAM,CAACyC,iBAAP,CAAyBL,YAAzB,EAAuC,sBAAUlD,UAAV,EAAsB0B,IAAtB,CAAvC,CAAP;AACD,GAxDiC,EAyDlC,CACEnB,SADF,EAEEX,MAFF,EAGEY,SAHF,EAIEhB,OAJF,EAKEsB,MALF,EAMEf,QANF,EAOED,MAPF,EAQED,OARF,EASEJ,SATF,EAUEC,UAVF,CAzDkC,CAApC;AAuEA,wBACE;AAAA,WAAM,YAAM;AACV,UAAIqD,WAAW,CAACzB,OAAhB,EAAyBgC,YAAY,CAACP,WAAW,CAACzB,OAAb,CAAZ;AACzB,UAAI0B,YAAY,CAAC1B,OAAjB,EAA0BgC,YAAY,CAACN,YAAY,CAAC1B,OAAd,CAAZ;AAC3B,KAHD;AAAA,GADF,EAKE,EALF;AA5NsD,MAoO9CkC,aApO8C,GAoOU1C,MApOV,CAoO9C0C,aApO8C;AAAA,MAoO/BC,oBApO+B,GAoOU3C,MApOV,CAoO/B2C,oBApO+B;AAAA,MAoOTZ,cApOS,GAoOU/B,MApOV,CAoOT+B,cApOS;;AAsOtD,MAAMa,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAC5B,4BAAAzD,UAAU,CAACqB,OAAX,0CAAoBqC,aAApB,CAAkC,IAAIC,KAAJ,CAAU,eAAV,CAAlC;AACD,GAFD;;AAIA,SAAO;AACLC,IAAAA,WAAW,EAAE/C,MAAM,CAAC+C,WADf;AAELjE,IAAAA,MAAM,EAANA,MAFK;AAGLC,IAAAA,OAAO,EAAPA,OAHK;AAILY,IAAAA,QAAQ,EAARA,QAJK;AAKLN,IAAAA,SAAS,EAATA,SALK;AAMLC,IAAAA,YAAY,EAAZA,YANK;AAOLM,IAAAA,MAAM,EAANA,MAPK;AAQLL,IAAAA,OAAO,EAAPA,OARK;AASLC,IAAAA,UAAU,EAAVA,UATK;AAULoD,IAAAA,eAAe,EAAfA,eAVK;AAWLF,IAAAA,aAAa,EAAbA,aAXK;AAYLM,IAAAA,uBAAuB,EAAEL,oBAZpB;AAaLb,IAAAA,yBAAyB,EAAzBA,yBAbK;AAcLnB,IAAAA,eAAe,EAAfA,eAdK;AAeLwB,IAAAA,eAAe,EAAfA;AAfK,GAAP;AAiBD","sourcesContent":["import {\n  useBoolean,\n  useDisclosure,\n  useFocusOnHide,\n  useFocusOnShow,\n  useIds,\n  useOutsideClick,\n} from \"@chakra-ui/hooks\"\nimport { Placement, usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport { useColorModeValue, useToken } from \"@chakra-ui/system\"\nimport {\n  callAllHandlers,\n  FocusableElement,\n  HTMLProps,\n  mergeRefs,\n  mergeWith,\n  PropGetter,\n} from \"@chakra-ui/utils\"\nimport { RefObject, useCallback, useEffect, useRef } from \"react\"\n\nconst TRIGGER = {\n  click: \"click\",\n  hover: \"hover\",\n} as const\n\nexport interface UsePopoverProps {\n  /**\n   * The html `id` attribute of the popover.\n   * If not provided, we generate a unique id.\n   *\n   * This `id` is also used to auto-generate the `aria-labelledby`\n   * and `aria-decribedby` attributes that points to the `PopoverHeader` and `PopoverBody`\n   */\n  id?: string\n  /**\n   * If `true`, the popover will be opened in controlled mode.\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the popover will be initially opened.\n   */\n  defaultIsOpen?: boolean\n  /**\n   * The `ref` of the element that should receive focus when the popover opens.\n   */\n  initialFocusRef?: RefObject<FocusableElement>\n  /**\n   * If `true`, focus will be returned to the element that triggers the popover\n   * when it closes\n   */\n  returnFocusOnClose?: boolean\n  /**\n   * If `true`, focus will be transferred to the first interactive element\n   * when the popover opens\n   */\n  autoFocus?: boolean\n  /**\n   * The gap (in pixels) to apply between the popover and the target.\n   * Used by `popper.js`\n   */\n  gutter?: number\n  /**\n   * The placment of the popover\n   */\n  placement?: Placement\n  /**\n   * If `true`, the popover will close when you blur out it by\n   * clicking outside or tabbing out\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the popover will close when you hit the `Esc` key\n   */\n  closeOnEsc?: boolean\n  /**\n   * Callback fired when the popover opens\n   */\n  onOpen?: () => void\n  /**\n   * Callback fired when the popover closes\n   */\n  onClose?: () => void\n  /**\n   * The size of the popover arrow\n   */\n  arrowSize?: number\n  /**\n   * The `box-shadow` of the popover arrow\n   */\n  arrowShadowColor?: string\n  /**\n   * The Popper.js modifiers to use.\n   */\n  modifiers?: UsePopperProps[\"modifiers\"]\n  /**\n   * The interaction that triggers the popover.\n   *\n   * `hover` - means the popover will open when you hover with mouse or\n   * focus with keyboard on the popover trigger\n   *\n   * `click` - means the popover will open on click or\n   * press `Enter` to `Space` on keyboard\n   */\n  trigger?: keyof typeof TRIGGER\n  openDelay?: number\n  closeDelay?: number\n  /**\n   * Performance 🚀:\n   * If `true`, the PopoverContent rendering will be deferred\n   * until the popover is open.\n   */\n  isLazy?: boolean\n}\n\nexport function usePopover(props: UsePopoverProps = {}) {\n  const {\n    closeOnBlur = true,\n    closeOnEsc = true,\n    initialFocusRef,\n    placement: placementProp,\n    gutter,\n    id,\n    arrowSize,\n    returnFocusOnClose = true,\n    autoFocus = true,\n    arrowShadowColor,\n    modifiers,\n    trigger = TRIGGER.click,\n    openDelay = 200,\n    closeDelay = 200,\n    isLazy,\n  } = props\n\n  const { isOpen, onClose, onOpen, onToggle } = useDisclosure(props)\n\n  const triggerRef = useRef<HTMLElement>(null)\n  const popoverRef = useRef<HTMLElement>(null)\n\n  const isHoveringRef = useRef(false)\n\n  const [hasHeader, setHasHeader] = useBoolean()\n  const [hasBody, setHasBody] = useBoolean()\n\n  const [triggerId, popoverId, headerId, bodyId] = useIds(\n    id,\n    \"popover-trigger\",\n    \"popover-content\",\n    \"popover-header\",\n    \"popover-body\",\n  )\n\n  const fallbackShadowColor = useColorModeValue(\"gray.200\", \"whiteAlpha.300\")\n  const shadowColor = arrowShadowColor ?? fallbackShadowColor\n  const arrowColor = useToken(\"colors\", shadowColor, arrowShadowColor)\n\n  const popper = usePopper({\n    enabled: isOpen,\n    placement: placementProp,\n    gutter,\n    arrowSize,\n    arrowShadowColor: arrowColor,\n    modifiers,\n  })\n\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: returnFocusOnClose && trigger === TRIGGER.click,\n  })\n\n  useFocusOnShow(popoverRef, {\n    visible: isOpen,\n    focusRef: initialFocusRef,\n    shouldFocus: autoFocus && trigger === TRIGGER.click,\n  })\n\n  useOutsideClick({\n    ref: popoverRef,\n    handler: (event) => {\n      if (\n        isOpen &&\n        trigger === TRIGGER.click &&\n        closeOnBlur &&\n        !triggerRef.current?.contains(event.target as HTMLElement)\n      ) {\n        onClose()\n      }\n    },\n  })\n\n  const getPopoverProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const popoverProps: HTMLProps = {\n        ...props,\n        style: { ...props.style, transformOrigin: popper.transformOrigin },\n        ref: mergeRefs(popoverRef, _ref),\n        children: !isLazy || isOpen ? props.children : null,\n        id: popoverId,\n        tabIndex: -1,\n        role: \"dialog\",\n        onKeyDown: callAllHandlers(props.onKeyDown, (event) => {\n          if (closeOnEsc && event.key === \"Escape\") {\n            onClose()\n          }\n        }),\n        onBlur: callAllHandlers(props.onBlur, (event) => {\n          const element = (event.relatedTarget ??\n            document.activeElement) as HTMLElement\n\n          if (\n            isOpen &&\n            closeOnBlur &&\n            !popoverRef.current?.contains(element) &&\n            !triggerRef.current?.contains(element)\n          ) {\n            onClose()\n          }\n        }),\n        \"aria-labelledby\": hasHeader ? headerId : undefined,\n        \"aria-describedby\": hasBody ? bodyId : undefined,\n      }\n\n      if (trigger === TRIGGER.hover) {\n        popoverProps.role = \"tooltip\"\n        popoverProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n        })\n        popoverProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n          isHoveringRef.current = false\n          setTimeout(onClose, closeDelay)\n        })\n      }\n\n      return popoverProps\n    },\n    [\n      isLazy,\n      isOpen,\n      popoverId,\n      hasHeader,\n      headerId,\n      hasBody,\n      bodyId,\n      trigger,\n      popper,\n      closeOnEsc,\n      onClose,\n      closeDelay,\n      closeOnBlur,\n    ],\n  )\n\n  const getPopoverPositionerProps: PropGetter = (props = {}, _ref = null) =>\n    getPopperProps(\n      mergeWith(props, {\n        style: { visibility: isOpen ? \"visible\" : \"hidden\" },\n      }),\n      _ref,\n    )\n\n  const openTimeout = useRef<number>()\n  const closeTimeout = useRef<number>()\n\n  const getTriggerProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const triggerProps: HTMLProps = {\n        ...props,\n        id: triggerId,\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": isOpen,\n        \"aria-controls\": popoverId,\n      }\n\n      if (trigger === TRIGGER.click) {\n        triggerProps.onClick = callAllHandlers(props.onClick, onToggle)\n      }\n\n      if (trigger === TRIGGER.hover) {\n        /**\n         * Any content that shows on pointer hover should also show on keyboard focus.\n         * Consider focus and blur to be the `hover` for keyboard users.\n         *\n         * @see https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html\n         */\n        triggerProps.onFocus = callAllHandlers(props.onFocus, onOpen)\n        triggerProps.onBlur = callAllHandlers(props.onBlur, onClose)\n\n        /**\n         * Any content that shows on hover or focus must be dismissible.\n         * This case pressing `Escape` will dismiss the popover\n         */\n        triggerProps.onKeyDown = callAllHandlers(props.onKeyDown, (event) => {\n          if (event.key === \"Escape\") {\n            onClose()\n          }\n        })\n\n        triggerProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n          openTimeout.current = window.setTimeout(onOpen, openDelay)\n        })\n\n        triggerProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n          isHoveringRef.current = false\n\n          if (openTimeout.current) {\n            clearTimeout(openTimeout.current)\n            openTimeout.current = undefined\n          }\n\n          closeTimeout.current = window.setTimeout(() => {\n            if (isHoveringRef.current === false) {\n              onClose()\n            }\n          }, closeDelay)\n        })\n      }\n\n      return popper.getReferenceProps(triggerProps, mergeRefs(triggerRef, _ref))\n    },\n    [\n      triggerId,\n      isOpen,\n      popoverId,\n      trigger,\n      popper,\n      onToggle,\n      onOpen,\n      onClose,\n      openDelay,\n      closeDelay,\n    ],\n  )\n\n  useEffect(\n    () => () => {\n      if (openTimeout.current) clearTimeout(openTimeout.current)\n      if (closeTimeout.current) clearTimeout(closeTimeout.current)\n    },\n    [],\n  )\n\n  const { getArrowProps, getArrowWrapperProps, getPopperProps } = popper\n\n  const onTransitionEnd = () => {\n    popoverRef.current?.dispatchEvent(new Event(\"transitionend\"))\n  }\n\n  return {\n    forceUpdate: popper.forceUpdate,\n    isOpen,\n    onClose,\n    headerId,\n    hasHeader,\n    setHasHeader,\n    bodyId,\n    hasBody,\n    setHasBody,\n    onTransitionEnd,\n    getArrowProps,\n    getArrowPositionerProps: getArrowWrapperProps,\n    getPopoverPositionerProps,\n    getPopoverProps,\n    getTriggerProps,\n  }\n}\n\nexport type UsePopoverReturn = ReturnType<typeof usePopover>\n"],"file":"use-popover.js"}